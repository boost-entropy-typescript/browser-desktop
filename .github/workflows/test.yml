name: Test build
on:
    push:
    pull_request:
    workflow_dispatch:

jobs:
    test:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest]
        steps:
            - name: Checkout gecko-dev repo
              uses: actions/checkout@v3
              with:
                  repository: dothq/gecko-dev
                  path: gecko
                  fetch-depth: 0 # Get all history as we need to resolve patch conflicts

            - name: Checkout browser-desktop repo
              uses: actions/checkout@v3
              with:
                  repository: ${{ github.repository }}
                  path: gecko/dot

            - name: Install dependencies
              shell: bash
              run: |
                  if [ "$RUNNER_OS" == "Linux" ]; then
                      sudo apt-get install build-essential git curl python3 python3-dev python3-pip
                      curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
                  else
                      echo "$RUNNER_OS not supported"
                      exit 1
                  fi

            - name: Setup Git identity
              run: |
                  git config --global user.email "worker@dothq.org"
                  git config --global user.name "Dot HQ"

            - name: Setup mach
              working-directory: gecko/dot
              run: |
                  ./scripts/install_mach_commands.py
                  ./mach

            - name: Import Gecko patches
              working-directory: gecko/dot
              run: ./mach import-patches

            - name: Assert mozconfig is setup
              working-directory: gecko
              shell: bash
              run: |
                  if !grep -q $topsrcdir/dot/config/mozconfigs/common mozconfig; then
                    echo Assertion failed! mozconfig is not setup.
                    exit 1
                  fi

            - name: Build browser
              working-directory: gecko/dot
              run: ./mach build
